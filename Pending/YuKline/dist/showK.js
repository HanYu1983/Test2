// Generated by LiveScript 1.6.0
(function(){
  var delay, slice$ = [].slice;
  delay = function(t){
    return new Promise(function(res, rej){
      return setTimeout(res, t);
    });
  };
  async function main(){
    var rows, ref$, id, name;
    (await delay(3000));
    $('#selK_ChartPeriod').val("365");
    $('#selK_ChartPeriod')[0].dispatchEvent(new Event("change"));
    (await delay(5000));
    rows = (function(){
      var table, rows, parse, res$, i$, len$, row, ref$, date, open, high, low, close, _, volume;
      table = $('#divK_ChartDetail > div > div > table');
      rows = table.find("tbody > tr");
      res$ = [];
      for (i$ = 0, len$ = rows.length; i$ < len$; ++i$) {
        row = rows[i$];
        ref$ = $(row).find("td"), date = ref$[0], open = ref$[1], high = ref$[2], low = ref$[3], close = ref$[4], _ = ref$[5], _ = ref$[6], volume = ref$[7];
        res$.push([date, low, open, close, high, volume].map(fn$));
      }
      parse = res$;
      return parse.reverse().map(function(arg$){
        var d, vs;
        d = arg$[0], vs = slice$.call(arg$, 1);
        return [d].concat(vs.map(parseFloat));
      });
      function fn$(dom){
        return $(dom).find("nobr").text().replace(/,/, "");
      }
    }.call(this));
    console.log(rows);
    ref$ = (function(){
      var origin;
      origin = $("body > table:nth-child(6) > tbody > tr > td:nth-child(3) > table:nth-child(1) > tbody > tr:nth-child(1) > td:nth-child(1) > table > tbody > tr:nth-child(1) > td > table > tbody > tr > td:nth-child(1) > nobr > a");
      if (origin.length === 0) {
        origin = $("body > table:nth-child(5) > tbody > tr > td:nth-child(3) > table:nth-child(1) > tbody > tr:nth-child(1) > td:nth-child(1) > table > tbody > tr:nth-child(1) > td > table > tbody > tr > td:nth-child(1) > nobr > a");
      }
      return origin.text().replace(/\s/, " ").split(" ");
    }.call(this)), id = ref$[0], name = ref$[1];
    return chrome.storage.local.get(null, function(model){
      if (!model.stockInfo) {
        model.stockInfo = {};
      }
      model.stockInfo[id] = {
        name: name,
        rows: rows
      };
      return chrome.storage.local.set({
        "stockInfo": model.stockInfo
      }, function(){
        return chrome.extension.sendMessage({
          cmd: 'update'
        });
      });
    });
  }
  main();
}).call(this);
