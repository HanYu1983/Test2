// Generated by LiveScript 1.6.0
(function(){
  var request, crypto, moment, ApiKey, Tool, huobiSignedOption;
  request = require('request');
  crypto = require('crypto');
  moment = require('moment');
  ApiKey = require('./private/apiKey');
  Tool = require('./brickpicker/tool');
  huobiSignedOption = function(baseurl, path, args, method){
    var data, k, v, p, meta, hash, signature, opt;
    data = {
      AccessKeyId: ApiKey.huobi.AccessKey,
      SignatureMethod: "HmacSHA256",
      SignatureVersion: 2,
      Timestamp: moment.utc().format('YYYY-MM-DDTHH:mm:ss')
    };
    if (method === "GET") {
      for (k in args) {
        v = args[k];
        data[k] = v;
      }
    }
    p = Object.keys(data).reduce(function(a, k){
      return a.concat([k + "=" + encodeURIComponent(data[k])]);
    }, []).sort().join("&");
    meta = [method, baseurl, path, p].join('\n');
    hash = crypto.createHmac('sha256', ApiKey.huobi.SecretKey).update(meta).digest('base64');
    signature = encodeURIComponent(hash);
    /*  
    sign = ApiKey.huobi.TradePassword + 'hello, moto'
    md5 = crypto.createHash('md5').update(sign).digest("hex").toLowerCase()
    authData = encodeURIComponent(JSON.stringify({assetPwd: md5}))
    */
    if (method === "POST") {
      for (k in args) {
        v = args[k];
        data[k] = v;
      }
    }
    opt = {
      url: "https://" + baseurl + path + "?" + p + '&Signature=' + signature,
      body: JSON.stringify(data),
      method: method,
      timeout: 5000,
      headers: {
        'Content-type': "application/json"
      }
    };
    console.log(opt);
    return opt;
  };
  Tool.getUrl(huobiSignedOption("api.huobipro.com", "/v1/account/accounts", {}, "GET"), function(err, res){
    var info, account_id;
    console.log(res);
    info = JSON.parse(res);
    console.log(info);
    if (info.status === "ok") {
      account_id = info.data[0].id;
      Tool.getUrl(huobiSignedOption("api.huobipro.com", "/v1/order/orders/place", {
        "account-id": account_id,
        type: "buy-limit",
        amount: 1,
        symbol: "btcusdt",
        price: 1
      }, "POST"), function(err, res){
        return console.log(res);
      });
    }
    return Tool.getUrl(huobiSignedOption("api.huobipro.com", "/v1/order/orders", {
      symbol: "btcusdt",
      states: "submitted,partial-filled"
    }, "GET"), function(err, res){
      return console.log(res);
    });
  });
}).call(this);
